--TASK 3: GroupBy, Aggregate Functions, Having, Order By, where

USE CourierManagementSystem;

--Find the total number of couriers handled by each employee.
SELECT EmployeeID, COUNT(CourierID) AS no_of_couriers FROM Couriers GROUP BY EmployeeID;


--Calculate the total revenue generated by each location
SELECT LocationID, SUM(Amount) AS Revenue FROM Payments GROUP BY LocationID;


--Find the total number of couriers delivered to each location.
SELECT LocationID, COUNT(CourierID) FROM Couriers WHERE ReceiverAddress IN (SELECT Address FROM Locations) GROUP BY LocationID;


--Find the courier with the highest average delivery time
SELECT CourierID FROM Couriers WHERE CourierID IN (SELECT CourierID FROM Payments GROUP BY CourierID ORDER BY AVG(CAST(DeliveryDate AS date)) DESC);


--Find Locations with Total Payments Less Than a Certain Amount
SELECT LocationID FROM Payments GROUP BY LocationID HAVING SUM(Amount) < 5000;

--Calculate Total Payments per Location
SELECT LocationID, SUM(Amount) FROM Payments GROUP BY LocationID;


--Retrieve couriers who have received payments totaling more than $1000 in a specific location (LocationID = X)
SELECT CourierID FROM Payments WHERE LocationID =108 GROUP BY CourierID HAVING SUM(Amount) > 1000;


--Retrieve couriers who have received payments totaling more than $1000 after a certain date (PaymentDate > 'YYYY-MM-DD')
SELECT CourierID FROM Payments WHERE PaymentDate > '2024-09-15' GROUP BY CourierID HAVING SUM(Amount) > 1000;


--Retrieve locations where the total amount received is more than $5000 before a certain date (PaymentDate > 'YYYY-MM-DD')
SELECT LocationID FROM Payments WHERE PaymentDate < '2024-09-15' GROUP BY LocationID HAVING SUM(Amount) > 5000;